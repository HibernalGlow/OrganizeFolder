rules:
- actions:
  - move: '{location}/[organize_images]/{path.relative_to(location)}'
  filters:
  - extension:
    - jpg
    - jpeg
    - png
    - gif
    - bmp
    - tiff
    - webp
    - avif
    - jxl
  - python: "from PIL import Image\nimport pillow_avif\nimport pillow_jxl\n\ndef check_ranges(value,\
      \ ranges):\n    \"\"\"快速检查尺寸是否在范围内\"\"\"\n    if not ranges:\n        return\
      \ False\n    for r in ranges:\n        if isinstance(r, (int, float)) and value\
      \ <= r:\n            return True\n    return False\n\n# 检查是否在目标文件夹中\nif '[organize_images]'\
      \ in str(path):\n    return False\n\ntry:\n    with Image.open(path) as img:\n\
      \        width, height = img.size\n\n        # 获取参数并检查\n        max_w = []\n\
      \        max_h = [630]\n\n        if not max_w and not max_h:\n            return\
      \ False\n\n        # 快速检查条件\n        w_ok = check_ranges(width, max_w) if max_w\
      \ else True\n        h_ok = check_ranges(height, max_h) if max_h else True\n\
      \n        return w_ok and h_ok\n\nexcept:\n    return False\n"
  locations:
  - exclude_dirs: &id001
    - '[organize_images]'
    path: D:\BaiduNetdiskDownload\20250925\1\3
  - exclude_dirs: *id001
    path: D:\BaiduNetdiskDownload\20250925\1\2
  name: 移动符合条件的图片到 [organize_images] 文件夹
  subfolders: true
- actions:
  - delete
  filters:
  - empty
  locations:
  - exclude_dirs: &id002
    - important
    - backup
    path: D:\BaiduNetdiskDownload\20250925\1\3
  - exclude_dirs: *id002
    path: D:\BaiduNetdiskDownload\20250925\1\2
  name: 清理空目录
  subfolders: true
  targets: dirs
